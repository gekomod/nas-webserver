#!/bin/bash

# ----------------------------------------------------------------------
# docker-backup - Backup Docker containers, volumes and configurations
# 
# Usage: docker-backup --location /path/to/backup --includes [compose,volumes,config]
#
# Created by NAS-Panel
# Copyright (c) 2025 NAS-Panel. All rights reserved.
# ----------------------------------------------------------------------

# Default values
BACKUP_LOCATION="/var/backups/docker"
INCLUDES=("compose" "volumes" "config")
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_DIR="$BACKUP_LOCATION/backup_$TIMESTAMP"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        --location)
            BACKUP_LOCATION="$2"
            shift 2
            ;;
        --includes)
            IFS=',' read -ra INCLUDES <<< "$2"
            shift 2
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

# Create backup directory
mkdir -p "$BACKUP_DIR"

# Backup Docker Compose files
if [[ " ${INCLUDES[@]} " =~ " compose " ]]; then
    echo "Backing up Docker Compose files..."
    mkdir -p "$BACKUP_DIR/compose"
    for container in $(docker ps --format '{{.Names}}'); do
        docker inspect --format '{{index .Config.Labels "com.docker.compose.project.working_dir"}}' "$container" | xargs -I {} cp -r {} "$BACKUP_DIR/compose/" 2>/dev/null
    done
fi

# Backup Docker volumes
if [[ " ${INCLUDES[@]} " =~ " volumes " ]]; then
    echo "Backing up Docker volumes..."
    mkdir -p "$BACKUP_DIR/volumes"
    for volume in $(docker volume ls -q); do
        docker run --rm -v "$volume:/data" -v "$BACKUP_DIR/volumes:/backup" alpine tar czf "/backup/$volume.tar.gz" -C /data .
    done
fi

# Backup Docker configurations
if [[ " ${INCLUDES[@]} " =~ " config " ]]; then
    echo "Backing up Docker configurations..."
    mkdir -p "$BACKUP_DIR/config"
    cp -r /etc/docker "$BACKUP_DIR/config/"
    docker info > "$BACKUP_DIR/config/docker_info.txt"
    docker ps -a > "$BACKUP_DIR/config/containers_list.txt"
    docker images > "$BACKUP_DIR/config/images_list.txt"
    docker network ls > "$BACKUP_DIR/config/networks_list.txt"
    docker volume ls > "$BACKUP_DIR/config/volumes_list.txt"
fi

# Create archive
echo "Creating backup archive..."
tar -czf "$BACKUP_LOCATION/docker_backup_$TIMESTAMP.tar.gz" -C "$BACKUP_LOCATION" "backup_$TIMESTAMP"

# Cleanup
rm -rf "$BACKUP_DIR"

echo "Backup completed successfully: $BACKUP_LOCATION/docker_backup_$TIMESTAMP.tar.gz"