import{_ as L,r as u,c as I,o as Y,K as D,b as g,h as w,e as r,w as m,d as _,F as O,l as V,f as c,i as B,g as l,k as h,I as y,t as S,m as T,y as v}from"./index-JqcLm-KS.js";import{P as $}from"./es6-promise-pool--TZSUk1y.js";const F={class:"widget-header"},M={key:0,class:"services-list"},Z={class:"service-content"},j={class:"service-info"},H={class:"service-name"},Q={class:"service-status"},R={key:1,class:"empty-state"},U={name:"ServicesWidget",displayName:"Status usług"},G=Object.assign(U,{setup(X){const a=u([]),b=u(!1),z=u(null),d=u([]),f=u(new Set);let k=null;const x=I(()=>a.value.length===0?"info":a.value.some(t=>!t.active)?"warning":"success"),A=I(()=>{if(a.value.length===0)return"BRAK DANYCH";const e=a.value.filter(t=>!t.active).length;return e?`${e} NIEAKTYWNE`:"WSZYSTKO OK"}),N=e=>({nginx:"mdi:nginx",mysql:"mdi:database",postgresql:"mdi:database",docker:"mdi:docker",ssh:"mdi:lock",cron:"mdi:clock",smbd:"mdi:folder-network",nmbd:"mdi:folder-network",zfs:"mdi:harddisk"})[e]||"mdi:cog",E=e=>({nginx:"NGINX",mysql:"MySQL",postgresql:"PostgreSQL",docker:"Docker",ssh:"SSH",cron:"Cron",smbd:"Samba (smbd)",nmbd:"Samba (nmbd)",zfs:"ZFS"})[e]||e.toUpperCase(),K=()=>{f.value.forEach(e=>{e.abort()}),f.value.clear()},P=async()=>{const e=new AbortController;f.value.add(e);try{const t=await v.get("/system/settings",{signal:e.signal,timeout:3e3});d.value=t.data.services?.monitoredServices||[]}catch(t){v.isCancel(t)||(console.error("Error fetching monitored services:",t),d.value=[])}finally{f.value.delete(e)}},C=async()=>{try{if(b.value=!0,z.value=null,await P(),d.value.length===0){a.value=[];return}const e=2;let t=0;const i=()=>{if(t>=d.value.length)return null;const n=d.value[t++];return W(n)},s=new $(i,e),p=[];s.addEventListener("fulfilled",n=>{n.data.result&&p.push(n.data.result)}),s.addEventListener("rejected",n=>{console.error("Błąd sprawdzania usługi:",n.data.error)}),await s.start(),a.value=p}catch(e){z.value="Błąd podczas pobierania statusu usług",console.error("Error fetching services:",e)}finally{b.value=!1}},W=async e=>{const t=v.CancelToken.source(),i=setTimeout(()=>{t.cancel(`Timeout sprawdzania usługi ${e}`)},3e3);try{const s=await v.get(`/services/status/${e}`,{cancelToken:t.token,timeout:2500});return{name:e,active:s.data.active,error:null}}catch(s){return v.isCancel(s)?(console.log(`Anulowano sprawdzanie usługi ${e}:`,s.message),{name:e,active:!1,error:"Przekroczono czas oczekiwania"}):{name:e,active:!1,error:s.response?.data?.error||"Błąd podczas sprawdzania statusu"}}finally{clearTimeout(i)}};return Y(()=>{C(),k=setInterval(C,3e4)}),D(()=>{K(),k&&clearInterval(k)}),(e,t)=>{const i=g("el-tag"),s=g("el-tooltip"),p=g("el-divider"),n=g("el-card");return r(),w(n,{class:"widget-card",shadow:"hover","body-style":{padding:"0",height:"100%",display:"flex",flexDirection:"column"}},{header:m(()=>[c("div",F,[l(h(y),{icon:"mdi:server",width:"18"}),t[0]||(t[0]=c("span",{class:"widget-title"},"Status usług",-1)),l(i,{type:x.value,size:"small",effect:x.value==="danger"?"dark":"plain",round:""},{default:m(()=>[T(S(A.value),1)]),_:1},8,["type","effect"])])]),default:m(()=>[a.value.length>0?(r(),_("div",M,[(r(!0),_(O,null,V(a.value,(o,q)=>(r(),_("div",{key:o.name,class:"service-item"},[c("div",Z,[c("div",j,[l(h(y),{icon:N(o.name),width:"16",class:"service-icon"},null,8,["icon"]),c("span",H,S(E(o.name)),1)]),c("div",Q,[l(i,{type:o.active?"success":"danger",size:"small",effect:"plain"},{default:m(()=>[T(S(o.active?"AKTYWNA":"WYŁĄCZONA"),1)]),_:2},1032,["type"]),o.error?(r(),w(s,{key:0,content:o.error,placement:"top"},{default:m(()=>[l(h(y),{icon:"mdi:alert-circle",width:"16",class:"error-icon"})]),_:2},1032,["content"])):B("",!0)])]),q<a.value.length-1?(r(),w(p,{key:0,class:"service-divider"})):B("",!0)]))),128))])):(r(),_("div",R,[l(h(y),{icon:"mdi:information-outline",width:"16"}),t[1]||(t[1]=c("span",null,"Brak danych o usługach",-1))]))]),_:1})}}}),te=L(G,[["__scopeId","data-v-2cf43dc9"]]);export{te as default};
