import{_ as le,u as se,r as m,s as re,c as x,o as ne,y as f,z as _,b as s,v as ue,h as N,e as U,w as o,f as w,g as e,x as ie,k as V,I as z,m as n,t as i,B as de}from"./index-JqcLm-KS.js";const ce={class:"widget-header"},pe={class:"status-message"},me={class:"firewall-content"},_e={class:"rules-container"},we={class:"rules-header"},fe={class:"stats-container"},ve={__name:"Firewall",setup(ge){const{t:D}=se(),u=m(!1),d=m([]),R=m([]),v=m({}),C=m(!1),g=m(!1),c=m(""),r=re({name:"",protocol:"tcp",port:80,source:"any",action:"allow"}),I=x(()=>u.value?D("network.firewall.status.active"):D("network.firewall.status.inactive")),L={name:[{required:!0,message:"Nazwa reguły jest wymagana",trigger:"blur"}],protocol:[{required:!0,message:"Wybierz protokół",trigger:"change"}],port:[{required:!0,message:"Podaj port",trigger:"blur"}],source:[{required:!0,message:"Podaj źródło",trigger:"blur"}]};x(()=>c.value?d.value.filter(t=>t.name.toLowerCase().includes(c.value.toLowerCase())||t.protocol.toLowerCase().includes(c.value.toLowerCase())||t.port.toString().includes(c.value)||t.source.toLowerCase().includes(c.value.toLowerCase())):d.value);const E=t=>{const a=t.match(/(\d+)\/(tcp|udp)/);return a?a[2]:"tcp"},S=t=>{const a=t.match(/(\d+)\/(tcp|udp)/);return a?a[1]:t};ne(()=>{q(),j(),A()});const q=async()=>{try{const t=await f.get("/network/firewall/status");u.value=t.data.enabled}catch(t){_.error("Błąd pobierania statusu zapory: "+t.message)}},j=async()=>{try{C.value=!0;const t=await f.get("/network/firewall/rules");d.value=t.data.data.map(a=>({...a,protocol:E(a.port),port:S(a.port),isIpv6:a.target.includes("(v6)")}))}catch(t){_.error("Błąd pobierania reguł zapory: "+t.message)}finally{C.value=!1}},A=async()=>{try{const t=await f.get("/network/firewall/stats");v.value=t.data}catch(t){console.error("Błąd pobierania statystyk:",t)}},M=async()=>{try{const t=u.value?"enable":"disable";await f.post(`/network/firewall/status/${t}`),_.success(`Zapora ${u.value?"włączona":"wyłączona"}`)}catch(t){u.value=!u.value,_.error(`Błąd podczas ${u.value?"włączania":"wyłączania"} zapory: ${t.message}`)}},W=()=>{g.value=!0},Z=async()=>{try{await R.value.validate();const t=await f.post("/network/firewall/rules",{name:r.name,protocol:r.protocol,port:r.port,source:r.source,action:r.action});d.value.push(t.data),g.value=!1,_.success("Reguła dodana pomyślnie"),T(),j()}catch(t){_.error("Błąd dodawania reguły: "+(t.response?.data?.message||t.message)),console.error("Error details:",t.response?.data)}},O=async t=>{try{await de.confirm("Czy na pewno chcesz usunąć tę regułę?","Potwierdzenie usunięcia",{type:"warning"}),await f.delete(`/network/firewall/rules/${t}`),d.value=d.value.filter(a=>a.id!==t),_.success("Reguła usunięta pomyślnie"),await j()}catch(a){a!=="cancel"&&ElNotification({title:"Błąd",message:a.response?.data?.error||"Nie udało się usunąć reguły",type:"error"})}},T=()=>{Object.assign(r,{name:"",protocol:"tcp",port:80,source:"any",action:"allow"})};return(t,a)=>{const K=s("el-switch"),B=s("el-tag"),P=s("el-input"),b=s("el-button"),p=s("el-table-column"),Q=s("el-table"),F=s("el-tab-pane"),k=s("el-descriptions-item"),G=s("el-descriptions"),H=s("el-tabs"),y=s("el-form-item"),h=s("el-option"),J=s("el-select"),X=s("el-input-number"),$=s("el-radio-button"),Y=s("el-radio-group"),ee=s("el-form"),ae=s("el-dialog"),te=s("el-card"),oe=ue("loading");return U(),N(te,{class:"firewall-widget",shadow:"hover"},{header:o(()=>[w("div",ce,[e(V(z),{icon:"mdi:firewall",width:"20"}),a[9]||(a[9]=w("span",null,"Zapora sieciowa",-1)),e(K,{modelValue:u.value,"onUpdate:modelValue":a[0]||(a[0]=l=>u.value=l),class:"firewall-switch",onChange:M},null,8,["modelValue"]),w("div",pe,[e(B,{type:u.value?"success":"danger"},{default:o(()=>[n(i(I.value),1)]),_:1},8,["type"])])])]),default:o(()=>[w("div",me,[e(H,{type:"border-card",class:"firewall-tabs"},{default:o(()=>[e(F,{label:"Reguły"},{default:o(()=>[w("div",_e,[w("div",we,[e(P,{modelValue:c.value,"onUpdate:modelValue":a[1]||(a[1]=l=>c.value=l),placeholder:"Filtruj reguły...",clearable:"",size:"small",class:"search-input"},{prefix:o(()=>[e(V(z),{icon:"mdi:magnify",width:"16"})]),_:1},8,["modelValue"]),e(b,{type:"primary",size:"small",onClick:W},{default:o(()=>[e(V(z),{icon:"mdi:plus",width:"16"}),a[10]||(a[10]=n(" Dodaj regułę "))]),_:1,__:[10]})]),ie((U(),N(Q,{data:d.value,style:{width:"100%"}},{default:o(()=>[e(p,{prop:"id",label:"ID",width:"80"}),e(p,{label:"Protokół",width:"120"},{default:o(({row:l})=>[e(B,null,{default:o(()=>[n(i(l.protocol),1)]),_:2},1024)]),_:1}),e(p,{prop:"port",label:"Port",width:"120"}),e(p,{label:"Akcja",width:"120"},{default:o(({row:l})=>[e(B,{type:l.action==="allow"?"success":"danger"},{default:o(()=>[n(i(l.action==="allow"?"Zezwól":"Blokuj"),1)]),_:2},1032,["type"])]),_:1}),e(p,{prop:"target",label:"Cel"}),e(p,{prop:"comment",label:"Komentarz"}),e(p,{label:"Operacje",width:"120"},{default:o(({row:l})=>[e(b,{type:"danger",size:"small",onClick:ye=>O(l.id)},{default:o(()=>[e(V(z),{icon:"mdi:delete",width:"16"})]),_:2},1032,["onClick"])]),_:1})]),_:1},8,["data"])),[[oe,C.value]])])]),_:1}),e(F,{label:"Statystyki"},{default:o(()=>[w("div",fe,[e(G,{column:2,border:"",size:"small"},{default:o(()=>[e(k,{label:"Zablokowane połączenia"},{default:o(()=>[n(i(v.value.blockedConnections||0),1)]),_:1}),e(k,{label:"Dozwolone połączenia"},{default:o(()=>[n(i(v.value.allowedConnections||0),1)]),_:1}),e(k,{label:"Ostatnia aktywność"},{default:o(()=>[n(i(v.value.lastActivity||"Brak danych"),1)]),_:1}),e(k,{label:"Wersja"},{default:o(()=>[n(i(v.value.version||"n/a"),1)]),_:1})]),_:1})])]),_:1})]),_:1})]),e(ae,{modelValue:g.value,"onUpdate:modelValue":a[8]||(a[8]=l=>g.value=l),title:"Dodaj nową regułę",width:"500px"},{footer:o(()=>[e(b,{onClick:a[7]||(a[7]=l=>g.value=!1)},{default:o(()=>a[11]||(a[11]=[n("Anuluj")])),_:1,__:[11]}),e(b,{type:"primary",onClick:Z},{default:o(()=>a[12]||(a[12]=[n("Dodaj regułę")])),_:1,__:[12]})]),default:o(()=>[e(ee,{model:r,rules:L,ref_key:"ruleForm",ref:R},{default:o(()=>[e(y,{label:"Nazwa reguły",prop:"name"},{default:o(()=>[e(P,{modelValue:r.name,"onUpdate:modelValue":a[2]||(a[2]=l=>r.name=l)},null,8,["modelValue"])]),_:1}),e(y,{label:"Protokół",prop:"protocol"},{default:o(()=>[e(J,{modelValue:r.protocol,"onUpdate:modelValue":a[3]||(a[3]=l=>r.protocol=l),placeholder:"Wybierz protokół"},{default:o(()=>[e(h,{label:"TCP",value:"tcp"}),e(h,{label:"UDP",value:"udp"}),e(h,{label:"ICMP",value:"icmp"}),e(h,{label:"Wszystkie",value:"all"})]),_:1},8,["modelValue"])]),_:1}),e(y,{label:"Port",prop:"port"},{default:o(()=>[e(X,{modelValue:r.port,"onUpdate:modelValue":a[4]||(a[4]=l=>r.port=l),min:1,max:65535,"controls-position":"right"},null,8,["modelValue"])]),_:1}),e(y,{label:"Źródło (IP/CIDR)",prop:"source"},{default:o(()=>[e(P,{modelValue:r.source,"onUpdate:modelValue":a[5]||(a[5]=l=>r.source=l),placeholder:"np. 192.168.1.0/24"},null,8,["modelValue"])]),_:1}),e(y,{label:t.$t("network.firewall.rule_action"),prop:"action"},{default:o(()=>[e(Y,{modelValue:r.action,"onUpdate:modelValue":a[6]||(a[6]=l=>r.action=l)},{default:o(()=>[e($,{value:"allow"},{default:o(()=>[n(i(t.$t("network.firewall.actions.allow")),1)]),_:1}),e($,{value:"deny"},{default:o(()=>[n(i(t.$t("network.firewall.actions.deny")),1)]),_:1})]),_:1},8,["modelValue"])]),_:1},8,["label"])]),_:1},8,["model"])]),_:1},8,["modelValue"])]),_:1})}}},ke=le(ve,[["__scopeId","data-v-0a95e448"]]);export{ke as default};
