import{_ as O,A as Q,r as g,s as z,o as W,b as r,v as X,d as V,e as p,g as e,f as k,x as Y,w as a,k as f,I as _,m,t as d,h as I,i as U,y as N,E as Z,z as h}from"./index-JqcLm-KS.js";const x={class:"interface-details"},ee={class:"details-title"},te={class:"card-header"},ae={class:"card-header"},le={key:0,class:"test-controls"},se={key:1,class:"test-progress"},oe={class:"progress-text"},ne={key:2,class:"test-results"},re={__name:"Details",setup(de){const E=Q(),n=g({device:"",status:"",mac:"",mtu:1500,ipv4:{local:"",prefixlen:""},stats:{}}),s=z({method:"dhcp",address:"",netmask:24,gateway:"",mtu:1500}),v=g(!1),C=g(!1),w=g(null),y=g(0),M=g(null),A=z({address:[{validator:(t,l,i)=>{s.method==="static"&&!P(l)?i(new Error("Invalid IP address")):i()},trigger:"blur"}],netmask:[{validator:(t,l,i)=>{s.method==="static"&&(l<0||l>32)?i(new Error("Netmask must be between 0-32")):i()},trigger:"blur"}],gateway:[{validator:(t,l,i)=>{s.method==="static"&&l&&!P(l)?i(new Error("Invalid gateway IP")):i()},trigger:"blur"}]}),P=t=>/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(t),R=async()=>{try{v.value=!0;const t=await N.get(`/network/interfaces/details/${E.params.interface}`);n.value=t.data}catch(t){console.error("Failed to fetch interface details:",t),Z({title:"Error",message:"Failed to load interface details",type:"error"})}finally{v.value=!1}},j=async()=>{try{await M.value.validate(),v.value=!0;const t=await N.post(`/network/interfaces/details/${E.params.interface}`,{method:s.method,address:s.method==="static"?s.address:null,netmask:s.method==="static"?s.netmask:null,gateway:s.method==="static"?s.gateway:null,mtu:s.mtu});h.success(t.data.message),await R()}catch(t){t.response?h.error(`${t.response.data.error}: ${t.response.data.details}`):h.error(t.message)}finally{v.value=!1}},q=async()=>{try{C.value=!0,y.value=0,w.value=null;const t=setInterval(()=>{y.value=Math.min(y.value+2,90)},300),l=await N.post(`/network/interfaces/details/${E.params.interface}/speedtest`);clearInterval(t),y.value=100,l.data.success?(w.value=l.data.data,h.success({message:`Speed test completed using ${l.data.data.server} server`,duration:5e3})):h.error(l.data.error)}catch(t){console.error("Speed test failed:",t),h.error({message:t.response?.data?.error||"Speed test failed",description:t.response?.data?.details||"Please check your connection",duration:7e3})}finally{C.value=!1}};return W(()=>{R()}),(t,l)=>{const i=r("el-button"),b=r("el-input"),u=r("el-form-item"),c=r("el-col"),S=r("el-option"),G=r("el-select"),H=r("el-tag"),B=r("el-input-number"),T=r("el-row"),J=r("el-form"),D=r("el-card"),$=r("el-descriptions-item"),F=r("el-descriptions"),K=r("el-progress"),L=X("loading");return p(),V("div",x,[e(i,{icon:"",onClick:l[0]||(l[0]=o=>t.$router.go(-1)),class:"back-button"},{default:a(()=>[e(f(_),{icon:"mdi:arrow-left",width:"20"})]),_:1}),k("h2",ee,[e(f(_),{icon:"mdi:ethernet-cable",width:"24",class:"title-icon"}),m(" "+d(t.$t("network.interfaces.details_for"))+" "+d(n.value.device),1)]),Y((p(),I(D,{class:"details-card",shadow:"hover"},{default:a(()=>[e(J,{model:s,rules:A,ref_key:"formRef",ref:M,"label-position":"top"},{default:a(()=>[e(T,{gutter:20},{default:a(()=>[e(c,{span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.device")},{default:a(()=>[e(b,{modelValue:n.value.device,"onUpdate:modelValue":l[1]||(l[1]=o=>n.value.device=o),readonly:""},{prefix:a(()=>[e(f(_),{icon:"mdi:network",width:"18"})]),_:1},8,["modelValue"])]),_:1},8,["label"])]),_:1}),e(c,{span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.method"),prop:"method"},{default:a(()=>[e(G,{modelValue:s.method,"onUpdate:modelValue":l[2]||(l[2]=o=>s.method=o)},{default:a(()=>[e(S,{value:"dhcp",label:t.$t("network.methods.dhcp")},null,8,["label"]),e(S,{value:"static",label:t.$t("network.methods.static")},null,8,["label"])]),_:1},8,["modelValue"])]),_:1},8,["label"])]),_:1}),e(c,{span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.status")},{default:a(()=>[e(H,{type:n.value.status==="up"?"success":"danger"},{default:a(()=>[m(d(n.value.status),1)]),_:1},8,["type"])]),_:1},8,["label"])]),_:1}),e(c,{span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.mac")},{default:a(()=>[e(b,{modelValue:n.value.mac,"onUpdate:modelValue":l[3]||(l[3]=o=>n.value.mac=o),readonly:""},null,8,["modelValue"])]),_:1},8,["label"])]),_:1}),e(c,{span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.address")},{default:a(()=>[e(b,{modelValue:n.value.ipv4.local,"onUpdate:modelValue":l[4]||(l[4]=o=>n.value.ipv4.local=o)},null,8,["modelValue"])]),_:1},8,["label"])]),_:1}),e(c,{span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.netmask")},{default:a(()=>[e(b,{modelValue:n.value.ipv4.prefixlen,"onUpdate:modelValue":l[5]||(l[5]=o=>n.value.ipv4.prefixlen=o)},null,8,["modelValue"])]),_:1},8,["label"])]),_:1}),e(c,{span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.mtu"),prop:"mtu"},{default:a(()=>[e(B,{modelValue:s.mtu,"onUpdate:modelValue":l[6]||(l[6]=o=>s.mtu=o),min:576,max:9e3,"controls-position":"right"},null,8,["modelValue"])]),_:1},8,["label"])]),_:1}),e(c,{span:24},{default:a(()=>[e(u,null,{default:a(()=>[e(i,{type:"primary",onClick:j},{default:a(()=>[e(f(_),{icon:"mdi:content-save",width:"18",class:"button-icon"}),m(" "+d(t.$t("network.interfaces.save")),1)]),_:1})]),_:1})]),_:1})]),_:1}),e(T,{gutter:20},{default:a(()=>[s.method==="static"?(p(),I(c,{key:0,span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.address"),prop:"address"},{default:a(()=>[e(b,{modelValue:s.address,"onUpdate:modelValue":l[7]||(l[7]=o=>s.address=o)},null,8,["modelValue"])]),_:1},8,["label"])]),_:1})):U("",!0),s.method==="static"?(p(),I(c,{key:1,span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.netmask"),prop:"netmask"},{default:a(()=>[e(B,{modelValue:s.netmask,"onUpdate:modelValue":l[8]||(l[8]=o=>s.netmask=o),min:0,max:32,"controls-position":"right"},null,8,["modelValue"])]),_:1},8,["label"])]),_:1})):U("",!0),s.method==="static"?(p(),I(c,{key:2,span:12,md:8},{default:a(()=>[e(u,{label:t.$t("network.interfaces.gateway"),prop:"gateway"},{default:a(()=>[e(b,{modelValue:s.gateway,"onUpdate:modelValue":l[9]||(l[9]=o=>s.gateway=o)},null,8,["modelValue"])]),_:1},8,["label"])]),_:1})):U("",!0)]),_:1})]),_:1},8,["model","rules"])]),_:1})),[[L,v.value]]),e(D,{class:"stats-card",shadow:"hover"},{default:a(()=>[k("div",te,[e(f(_),{icon:"mdi:chart-line",width:"20",class:"header-icon"}),k("span",null,d(t.$t("network.interfaces.statistics")),1)]),e(F,{column:1,border:""},{default:a(()=>[e($,{label:t.$t("network.interfaces.rx_bytes")},{default:a(()=>[m(d(n.value.stats?.rx_bytes||0),1)]),_:1},8,["label"]),e($,{label:t.$t("network.interfaces.tx_bytes")},{default:a(()=>[m(d(n.value.stats?.tx_bytes||0),1)]),_:1},8,["label"])]),_:1})]),_:1}),e(D,{class:"speedtest-card",shadow:"hover"},{default:a(()=>[k("div",ae,[e(f(_),{icon:"mdi:speedometer",width:"20",class:"header-icon"}),k("span",null,d(t.$t("network.interfaces.speed_test")),1)]),C.value?(p(),V("div",se,[e(K,{percentage:y.value,status:"success"},null,8,["percentage"]),k("div",oe,[e(f(_),{icon:"mdi:progress-clock",width:"18",class:"progress-icon"}),m(" "+d(t.$t("network.interfaces.testing")),1)])])):(p(),V("div",le,[e(i,{type:"primary",onClick:q,disabled:v.value},{default:a(()=>[e(f(_),{icon:"mdi:play",width:"16",class:"button-icon"}),m(" "+d(t.$t("network.interfaces.start_test")),1)]),_:1},8,["disabled"])])),w.value?(p(),V("div",ne,[e(F,{column:1,border:""},{default:a(()=>[e($,{label:t.$t("network.interfaces.download")},{default:a(()=>[m(d(w.value.download)+" Mbps ",1)]),_:1},8,["label"]),e($,{label:t.$t("network.interfaces.upload")},{default:a(()=>[m(d(w.value.upload)+" Mbps ",1)]),_:1},8,["label"]),e($,{label:t.$t("network.interfaces.ping")},{default:a(()=>[m(d(w.value.ping)+" ms ",1)]),_:1},8,["label"])]),_:1})])):U("",!0)]),_:1})])}}},ue=O(re,[["__scopeId","data-v-f0b93fa0"]]);export{ue as default};
