import{_ as j,r as d,c as V,o as A,b as a,d as k,e as u,f as c,g as l,m as h,w as s,k as y,I as L,t as i,F as D,l as E,h as b,y as z}from"./index-JqcLm-KS.js";const G={class:"logs-container"},K={class:"logs-header"},O={class:"controls"},q={class:"log-header"},H={class:"log-content-wrapper"},J={class:"log-content"},P={key:0},Q={__name:"LocalLogs",setup(R){const m=d(!1),p=d([]),r=d({}),_=d(""),g=d(""),w=d(200),B=V(()=>_.value.split(`
`).filter(e=>e.trim())),C=V(()=>g.value?B.value.filter(e=>e.toLowerCase().includes(g.value.toLowerCase())).join(`
`):_.value),$=async()=>{try{const e=await z.get("/diagnostics/system-logs");p.value=Object.entries(e.data.availableLogs).map(([o,n])=>({key:o,name:o.toUpperCase(),path:n,size:e.data.totalSize})),p.value.length>0&&(r.value=p.value[0],await v())}catch(e){console.error("Błąd ładowania dostępnych logów:",e)}},v=async()=>{if(r.value?.key){m.value=!0;try{const e=await z.get(`/diagnostics/system-logs/${r.value.key}?lines=${w.value}`);_.value=e.data.data}catch(e){console.error("Błąd ładowania logów:",e),_.value=`Błąd: ${e.message}`}finally{m.value=!1}}},x=e=>{if(e===0)return"0 B";const o=1024,n=["B","KB","MB","GB"],f=Math.floor(Math.log(e)/Math.log(o));return parseFloat((e/Math.pow(o,f)).toFixed(2))+" "+n[f]};return A(async()=>{await $()}),(e,o)=>{const n=a("el-icon"),f=a("el-option"),F=a("el-select"),M=a("el-input"),S=a("el-slider"),T=a("el-button"),U=a("el-tag"),I=a("el-skeleton"),N=a("el-card");return u(),k("div",G,[c("div",K,[c("h2",null,[l(n,null,{default:s(()=>[l(y(L),{icon:"mdi:file-document-multiple-outline"})]),_:1}),h(" "+i(e.$t("systemLogs.localLogs")),1)]),c("div",O,[l(F,{modelValue:r.value,"onUpdate:modelValue":o[0]||(o[0]=t=>r.value=t),placeholder:e.$t("systemLogs.selectLogFile"),style:{width:"200px"},size:"small",onChange:v},{default:s(()=>[(u(!0),k(D,null,E(p.value,t=>(u(),b(f,{key:t.key,label:t.name,value:t},null,8,["label","value"]))),128))]),_:1},8,["modelValue","placeholder"]),l(M,{modelValue:g.value,"onUpdate:modelValue":o[1]||(o[1]=t=>g.value=t),placeholder:e.$t("systemLogs.filterLogs"),clearable:"",style:{width:"200px"},size:"small"},{prefix:s(()=>[l(n,null,{default:s(()=>[l(y(L),{icon:"mdi:filter-outline"})]),_:1})]),_:1},8,["modelValue","placeholder"]),l(S,{modelValue:w.value,"onUpdate:modelValue":o[2]||(o[2]=t=>w.value=t),label:e.$t("systemLogs.linesToShow"),min:50,max:1e3,step:50,style:{width:"200px"},"show-input":"",size:"small",onChange:v},null,8,["modelValue","label"]),l(T,{type:"primary",size:"small",onClick:v,loading:m.value},{default:s(()=>[l(n,null,{default:s(()=>[l(y(L),{icon:"mdi:refresh"})]),_:1}),h(" "+i(e.$t("systemLogs.refresh")),1)]),_:1},8,["loading"])])]),l(N,{class:"log-card"},{default:s(()=>[c("div",q,[c("span",null,[l(n,null,{default:s(()=>[l(y(L),{icon:"mdi:information-outline"})]),_:1}),h(" "+i(r.value.name)+" ("+i(e.$t("systemLogs.logSize"))+": "+i(x(r.value.size))+") ",1)]),l(U,{size:"small"},{default:s(()=>[h(i(B.value.length)+" "+i(e.$t("systemLogs.logLines")),1)]),_:1})]),c("div",H,[c("div",J,[m.value?(u(),b(I,{key:1,rows:10,animated:""})):(u(),k("pre",P,i(C.value),1))])])]),_:1})])}}},X=j(Q,[["__scopeId","data-v-1d52dabe"]]);export{X as default};
